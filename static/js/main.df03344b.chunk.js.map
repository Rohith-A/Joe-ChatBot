{"version":3,"sources":["logo.svg","assets/bot-avatar.jpg","CommonUtility.js","Review-form.jsx","GeneratePDF.jsx","ReviewForm.jsx","Simple-form.jsx","Header.jsx","Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","nameParser","s","str","value","separetor","name","test","toLowerCase","i","length","toLocaleLowerCase","split","toUpperCase","trim","charAt","slice","convertToFeet","hgt","height","realFeet","feet","Math","floor","round","convertToCms","cmTotal","Number","toPrecision","includes","calculateBMI","formDetails","heightFt","heightCm","val","weight","toFixed","concat","parseHeightCm","Component","GeneratePDF","props","React","createElement","Fragment","Container","maxWidth","style","marginTop","Button","variant","color","background","padding","fontSize","fontWeight","onClick","doc","jsPDF","setTextColor","text","date","Date","setFontSize","toLocaleDateString","internal","pageSize","setCharSpace","autoTable","headStyles","cellPadding","fillColor","startY","columnStyles","0","cellWidth","fontStyle","1","alternateRowStyles","head","body","gender","age","styles","save","printPdf","ReviewForm","_useState","useState","_useState2","_slicedToArray","setFormDetails","steps","useEffect","Object","keys","Typography","Grid","container","spacing","item","xs","align","config","width","headerTitle","avatarStyles","theme","top","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","botAvatar","require","SimpleForm","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","ThemeProvider","ChatBot","assign","avatarStyle","id","message","trigger","user","validator","_ref","previousValue","options","label","isNaN","_ref2","_ref3","delay","component","asMessage","Header","class","href","Footer","App","className","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.df03344b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/bot-avatar.1b8b550d.jpg\";","export const nameParser = (s) => {\n    if (s) {\n    let str = s;\n    if (s && s.value) {\n        str = str.value;\n        }\n    const separetor = [\"i'm \", \"i am \", \" is\", \" name's \"];\n    let name = '';\n    if (/ name's| is|i'm |i am /.test(str.toLowerCase())) {\n        for (let i = 0; i <= separetor.length; i++) {\n            if (str.toLocaleLowerCase().split(separetor[i]).length > 0) {\n                name = str.toLocaleLowerCase().split(separetor[i])[1];\n                if (name) {\n                name = name.toUpperCase().trim();\n                return name.charAt(0).toUpperCase() + name.slice(1, name.length).toLowerCase();\n                }\n            }\n        }\n    }\n    return str.charAt(0).toUpperCase() + str.slice(1, str.length).toLowerCase();\n}\nreturn '';\n};\n\nexport const convertToFeet = (hgt) => {\n    if (hgt) {\n    let height = hgt;\n    if (hgt && hgt.value) {\n        height = hgt.value;\n        }\n    const realFeet = ((height*0.393700) / 12);\n    const feet = Math.floor(realFeet);\n    const inches = Math.round((realFeet - feet) * 12);\n    return feet + '.' + inches;\n    }\n    return 0;\n}\n\nexport const convertToCms = (hgt) => {\n    if (hgt) {\n    let height = Number(hgt).toPrecision(2);\n    let feet;\n    let cmTotal;\n    if (hgt && hgt.value) {\n    height = Number(hgt.value).toPrecision(2);\n    }\n    if(height && height.includes('.')) {\n    feet = height.split('.')\n    cmTotal = feet[0] * 30.48 + feet[1] * 2.54;\n    } else {\n        cmTotal = feet * 30.48 + 0 * 2.54;\n    }\n    return Math.round(cmTotal);\n}\nreturn 0;\n}\n\n\nexport const calculateBMI = (formDetails) => {\n    let msg = '';\n    let height = '';\n    if (formDetails && formDetails.heightFt) {\n        height = convertToCms(formDetails.heightFt.value || 0)\n    } else {\n        height = formDetails.heightCm ? formDetails.heightCm.value : 0;\n    }\n    let val = (\n        [Number(formDetails.weight ? formDetails.weight.value : 0) / Number(height) / Number(height)] * 10000\n    ).toFixed(1);\n    if (val < 18.5) {\n        msg = `${val} - Under Weight`;\n    } else if (val >= 18.5 && val <= 24.9) {\n        msg = `${val} - Healthy`;\n    } else if (val >= 24.9 && val < 30) {\n        msg = `${val} - Overweight`;\n    } else {\n        msg = `${val} - Obese`;\n    }\n    return msg;\n}\n\n\nexport const parseHeightCm = (formDetails) => {\n    if (formDetails && formDetails.heightCm && formDetails.heightCm.value) {\n        if (formDetails.heightCm.value.includes('.')) {\n            return convertToCms(formDetails.heightCm.value);\n        }\n        return formDetails.heightCm.value;\n    } else if (formDetails.heightFt && formDetails.heightFt.value && !formDetails.heightCm) {\n        return convertToCms(formDetails.heightFt.value);\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport { convertToCms, convertToFeet, nameParser } from './CommonUtility';\n\n// import Item froom ''\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      gender: '',\n      age: '',\n      weight: '',\n      bmi: '',\n      heightCm: '', \n      heightFt: ''\n    };\n  }\n  \n  componentWillMount() {\n    const { steps } = this.props;\n    const { name, gender, age, weight,  heightCm, heightFt } = steps;\n    this.setState({ name, gender, age, heightCm, heightFt, weight });\n  }\n\n  render() {\n    const { name, gender, age, heightFt, heightCm, weight } = this.state;\n    const calculateBMI = () => {\n        let msg = '';\n        let height = '';\n        if(heightFt) {\n          height = convertToCms(heightFt.value)\n        } else {\n          height = heightCm.value;\n        }\n        let val = (\n          [Number(weight.value) / Number(height) / Number(height)] * 10000\n        ).toFixed(1);\n        if (val < 18.5) {\n            msg = `${val} - Under Weight`;\n        } else if (val > 18.5 && val <= 24.9) {\n            msg = `${val} - Healthy`;\n        } else if (val > 24.9 && val < 30) {\n            msg = `${val} - Overweight`;\n        } else {\n            msg = `${val} - Obese`;\n        }\n        return msg;\n      }\n      function stateSet (value, key) {\n        this.setState({...this.state, [key]: {...[key], value: convertToCms(value)}})\n      }\n      function parseHeightCm () {\n        if (heightCm && heightCm.value) {\n          if (heightCm.value.includes('.')) {\n            stateSet(heightCm.value);\n            return convertToCms(heightCm.value);\n          }\n        return heightCm.value;\n        } else if (heightFt && heightFt.value && !heightCm) {\n          return convertToCms(heightFt.value);\n        }\n      }\n    return (\n      <div style={{ width: '100%', marginLeft: 5 }}>\n        <h3>BMI Report</h3>\n        <Grid container spacing={2}>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>Name :</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n  <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{nameParser(name.value)}</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n  <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>Gender :</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{gender.value}</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>Age :</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{age.value}</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{'Height (cm) :'}</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{parseHeightCm()}</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{'Height (ft) :'}</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{heightFt && heightFt.value ? heightFt.value : convertToFeet(heightCm.value)}</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>Weight :</Typography>\n  </Grid>\n  <Grid item={true} xs={6}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>{weight.value}</Typography>\n  </Grid>\n  <Grid item={true} xs={5}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '15px'}}>BMI :</Typography>\n  </Grid>\n  <Grid item={true} xs={7}>\n    <Typography align=\"center\" variant=\"h5\" style={{fontWeight: 800, fontSize: '14px'}}>{calculateBMI()}</Typography>\n  </Grid>\n</Grid>\n      </div>\n    );\n  }\n}\n\nexport default Review","import React from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport { Button, Container } from \"@mui/material\";\nimport { calculateBMI, convertToFeet, nameParser, parseHeightCm } from \"./CommonUtility\";\nimport autoTable from 'jspdf-autotable'\n\nconst GeneratePDF = (props) => {\n    const {formDetails} = props;\n\n    const printPdf = () => {\n        const doc = new jsPDF();\n        doc.setTextColor('#117dc2')\n        // doc.setCharSpace(0.5)\n        doc.text('Body Mass Index Report', 15, 10);\n        const date = new Date()\n        // doc.setCharSpace(0);\n        doc.setFontSize(8.5);\n        doc.text(date.toLocaleDateString(), 15, 16);\n        doc.setTextColor('#117dc2')\n        var str = \"This is auto generated report by Joe chatbot. The results are generated based on user input\";\n        doc.setFontSize(8);// optional\n        doc.text(str, 10, doc.internal.pageSize.height - 10);\n        doc.text('', 10, doc.internal.pageSize.height - 20);\n        doc.setCharSpace(0.4)\n        autoTable(doc, {\n            headStyles: {\n                cellPadding: 0,\n                fillColor: [255,255,255]\n            },\n            startY: 25,\n            columnStyles: {\n                0: {\n                    cellPadding: 2,\n                    cellWidth: 70,\n                    fontSize: 12,\n                    fontStyle: {\n                        color: 'grey'\n                    }\n                },\n                1: {\n                    cellPadding: 2,\n                    cellWidth: 70,\n                    fontSize: 12,\n                    fontStyle: {\n                        color: 'grey'\n                    }\n                }\n            },\n            alternateRowStyles: {\n                fillColor: [255, 255, 255]\n            },\n            head: [['', '']],\n            body: [\n              ['Name : ', `${nameParser(formDetails.name && formDetails.name.value)}`],\n              ['Gender : ', `${formDetails.gender && formDetails.gender.value }`],\n              ['Age : ', `${formDetails.age && formDetails.age.value } yrs`],\n              [`Height (cm): `, `${parseHeightCm(formDetails) + ' cms'}`],\n              [`Height (ft): `, `${\n                (formDetails.heightFt && formDetails.heightFt.value) ? formDetails.heightFt.value + ' ft'\n                    : convertToFeet(formDetails.heightCm && formDetails.heightCm.value) + ' ft'}`],\n                ['Weight : ', `${formDetails.weight && formDetails.weight.value + ' kg(s)'}`],\n                ['BMI : ', `${calculateBMI(formDetails)}`],\n              // ...\n            ],\n          })\n          doc.setCharSpace(0)\n          autoTable(doc, {\n            headStyles: {\n                cellPadding: 1\n            },\n            startY: 115,\n            styles: {\n                fontSize: 12\n            },\n            columnStyles: {\n                0: {\n                    cellPadding: 3,\n                    cellWidth: 70,\n                    fontSize: 12,\n                    fontStyle: {\n                        color: 'gray'\n                    }\n                },\n                1: {\n                    cellPadding: 3,\n                    cellWidth: 70,\n                    fontSize: 12,\n                    fontStyle: {\n                        color: 'gray'\n                    }\n                }\n            },\n            head: [['BMI Score', 'Category']],\n            body: [\n              ['less than 18.5', 'Under weight'],\n              ['18.5 to 24.9 ', 'Healthy Weight range'],\n              ['25.0 to 29.9', 'overweight range'],\n              ['30.0 or higher,', 'obese range']\n            ],\n          })\n        doc.save(`${nameParser(formDetails.name && formDetails.name.value)}'s-BMI.pdf`);\n    }\n\n    \n\n    return (\n        <React.Fragment>\n        <Container maxWidth=\"sm\" style={{marginTop: '10px'}}> \n        <Button variant=\"filled\" style={{color: '#117dc2',\n        background: 'white',\n        padding: '1px',\n        fontSize: '10px',\n        fontWeight: 600\n    }} onClick={() => printPdf()}>\n        Print\n        </Button>\n        </Container>\n        </React.Fragment>\n    )\n}\n\nexport default GeneratePDF;","import { Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport React, { useEffect, useState } from \"react\";\nimport { calculateBMI, convertToCms, convertToFeet, nameParser, parseHeightCm } from './CommonUtility';\nimport GeneratePDF from './GeneratePDF';\n\nconst ReviewForm = (props) => {\n    const [formDetails, setFormDetails] = useState({\n    });\n    const { steps } = props;\n    useEffect(() => {\n        if (steps) {\n            const { name, gender, age, weight, heightCm, heightFt } = steps;\n            const formData = { name, gender, age, weight, heightCm, heightFt }\n            setFormDetails(formData);\n        }\n    }, [steps]);\n\n    // const calculateBMI = () => {\n    //     let msg = '';\n    //     let height = '';\n    //     if (formDetails && formDetails.heightFt) {\n    //         height = convertToCms(formDetails.heightFt.value || 0)\n    //     } else {\n    //         height = formDetails.heightCm ? formDetails.heightCm.value : 0;\n    //     }\n    //     let val = (\n    //         [Number(formDetails.weight ? formDetails.weight.value : 0) / Number(height) / Number(height)] * 10000\n    //     ).toFixed(1);\n    //     if (val < 18.5) {\n    //         msg = `${val} - Under Weight`;\n    //     } else if (val >= 18.5 && val <= 24.9) {\n    //         msg = `${val} - Healthy`;\n    //     } else if (val >= 24.9 && val < 30) {\n    //         msg = `${val} - Overweight`;\n    //     } else {\n    //         msg = `${val} - Obese`;\n    //     }\n    //     return msg;\n    // }\n\n    // const parseHeightCm = () => {\n    //     if (formDetails && formDetails.heightCm && formDetails.heightCm.value) {\n    //         if (formDetails.heightCm.value.includes('.')) {\n    //             setFormDetails({ ...formDetails, heightFt: { ...formDetails.heightFt, value: formDetails.heightCm.value } })\n    //             return convertToCms(formDetails.heightCm.value);\n    //         }\n    //         //   setFormDetails({...formDetails, heightFt: {...formDetails.heightFt, value: convertToCms(formDetails.heightCm.value)}})\n    //         return formDetails.heightCm.value;\n    //     } else if (formDetails.heightFt && formDetails.heightFt.value && !formDetails.heightCm) {\n    //         return convertToCms(formDetails.heightFt.value);\n    //     }\n    // }\n\n    return (\n        <React.Fragment>\n            {Object.keys(formDetails).length && (\n                <React.Fragment>\n                    <Typography>BMI Report</Typography>\n                    <Grid container spacing={2}>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"right\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>Name :</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"left\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>\n                            {nameParser(formDetails.name && formDetails.name.value)}\n                            </Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"right\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>Gender :</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"left\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>{formDetails.gender && formDetails.gender.value }</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"right\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>Age :</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"left\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>{formDetails.age && formDetails.age.value + ' yrs'}</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"right\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '12px' }}>{'Height (cm) :'}</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"left\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>{parseHeightCm(formDetails) + ' cms'}</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"right\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '12px' }}>{'Height (ft) :'}</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"left\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>\n                            {\n                                (formDetails.heightFt && formDetails.heightFt.value) ? formDetails.heightFt.value + ' ft'\n                                    : convertToFeet(formDetails.heightCm && formDetails.heightCm.value) + ' ft'}\n                                    </Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"right\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>Weight :</Typography>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Typography align=\"left\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>{formDetails.weight && formDetails.weight.value + ' kg(s)'}</Typography>\n                        </Grid>\n                        <Grid item={true} xs={5}>\n                            <Typography align=\"right\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>BMI :</Typography>\n                        </Grid>\n                        <Grid item={true} xs={7}>\n                            <Typography align=\"left\" variant=\"h5\" style={{ fontWeight: 600, fontSize: '13px' }}>{calculateBMI(formDetails)}</Typography>\n                        </Grid>\n                    </Grid>\n                    <GeneratePDF formDetails={formDetails}/>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n\n    )\n}\n\nexport default ReviewForm","import React, { Component } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport Review from './Review-form';\nimport Container from '@mui/material/Container';\nimport { nameParser } from './CommonUtility';\nimport ReviewForm from './ReviewForm';\n// all available config props\nconst config ={\n  width: \"500px\",\n  height: \"500px\", \n  headerTitle:  'Check your BMI',\n  // floating: true\n};\nconst avatarStyles = {\n  width: \"40px\",\n  height: \"40px\", \n}\nconst theme = {\n  top: \"50px\",\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#117dc2',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#117dc2',\n  botFontColor: '#fff',\n  userBubbleColor: '#f2cea5',\n  userFontColor: '#4a4a4a',\n  botAvatar: avatarStyles\n};\nconst botAvatar = require('./assets/bot-avatar.jpg')\n\nclass SimpleForm extends Component {\n  render() {\n    return (\n<Container maxWidth=\"sm\" style={{marginTop: '40px'}}> \n      <ThemeProvider theme={theme}>\n      <ChatBot\n      botAvatar = {botAvatar || null}\n      avatarStyle={avatarStyles}\n      steps={[\n        {\n          id: '1',\n          message: 'Hi, this is Joe 😊. What is your name?',\n          trigger: 'name',\n  \n        },\n        {\n          id: 'name',\n          user: true,\n          validator: (value) => {\n            if (/^[A-Za-z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*/.test(value))\n              {\n                return true;\n              }\n            else\n              {\n                return'Please input alphabet characters only.';\n              }\n         },\n          trigger: '3'\n        },\n        {\n          id: '3',\n          message: ({ previousValue, steps }) => `Hi ${nameParser(previousValue)}! What is your gender?`,\n          trigger: 'gender',\n        },\n        {\n          id: 'gender',\n          options: [\n            { value: 'Male', label: 'Male', trigger: '5' },\n            { value: 'Female', label: 'Female', trigger: '5' },\n          ],\n        },\n        {\n          id: '5',\n          message: 'How old are you?',\n          trigger: 'age',\n        },\n        {\n          id: 'age',\n          user: true,\n          trigger: '7',\n          validator: (value) => {\n            if (!value || isNaN(value)) {\n              return 'Please enter valid number';\n            } else if (Number(value) <= 0 || value > 120) {\n              return `${value}? Come on! 🤷🏻‍♀️`;\n            }\n\n            return true;\n          },\n        },\n        {\n          id: '7',\n          message: 'Please select an option to enter your height',\n          trigger: 'heightUnits',\n        },\n        {\n          id: 'heightUnits',\n          options: [\n            { value: 'ft', label: 'Feet', trigger: ({ previousValue, steps }) => 'ft' },\n            { value: 'cm', label: 'Centi meters', trigger: ({ previousValue, steps }) => 'cm' }\n          ],\n        },\n        {\n          id: 'cm',\n          delay: 300,\n          message: 'Please enter your height in cm',\n          trigger: 'heightCm',\n        },\n        {\n          id: 'heightCm',\n          user: true,\n          trigger: '8',\n          validator: (value, steps) => {\n            if (!value || isNaN(value)) {\n              return 'Please enter valid number';\n            } else if (Number(value) <= 0) {\n              return `${value} cm! are you kidding me 😒 ?`;\n            }\n            return true;\n          },\n        },\n        {\n          id: 'ft',\n          delay: 300,\n          message: 'Please enter your height in ft',\n          trigger: 'heightFt',\n        },\n        {\n          id: 'heightFt',\n          user: true,\n          trigger: '8',\n          validator: (value, steps) => {\n            if (!value || isNaN(value)) {\n              return 'Please enter valid number';\n            } else if (Number(value) <= 0 || Number(value) > 10) {\n              return `${value} ft! are you kidding me 😒 ?`;\n            }\n            return true;\n          },\n        },\n        {\n          id: '8',\n          message: 'Please enter your weight (kg)',\n          trigger: 'weight',\n        },\n        {\n          id: 'weight',\n          user: true,\n          trigger: '9',\n          validator: (value) => {\n            if (!value || isNaN(value)) {\n              return 'value must be a number';\n            } else if (Number(value) <= 0) {\n              return `${value} kg(s)! are you kidding me 😒 ?`;\n            }\n            return true;\n          },\n        },\n        {\n          id: '9',\n          message: 'Great! Check out your BMI',\n          trigger: 'review',\n        },\n        {\n          id: 'review',\n          component: <ReviewForm />,\n          asMessage: true,\n          trigger: 'update',\n        },\n        {\n          id: 'update',\n          message: 'Select below options to update the data/exit',\n          trigger: 'update-question',\n        },\n        {\n          id: 'update-question',\n          options: [\n            { value: 'yes', label: 'Reset', trigger: '3' },\n            { value: 'no', label: 'End chat', trigger: 'end-message' },\n            { value: '', label: 'Update height/weight', trigger: '7' },\n          ],\n        },\n        {\n          id: 'end-message',\n          message: 'Thanks. have a great day 😃',\n          // end: true,\n          trigger: 'chatOption'\n        },\n        {\n          id: 'chatOption',\n          options: [\n            { value: 'Hi', label: 'Start chat', trigger: '1' }],\n            // end: true\n        },\n      ]}\n        {...config}\n      />\n        </ThemeProvider>\n        </Container>\n        );\n      }\n\n    }\n\n    export default SimpleForm;","import logo from './logo.svg';\nimport './App.css';\nimport SimpleForm from './Simple-form';\nimport React, { Component } from 'react';\n\nfunction Header() {\n  return (\n<div class=\"header\">\n  <a href=\"#default\" class=\"logo\">Joe!</a>\n</div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\n\nfunction Footer() {\n  return (\n<div class=\"footer\">\n  <p>&#169; 2023 Rohith </p>\n</div>\n  );\n}\n\nexport default Footer;\n","import logo from './logo.svg';\nimport './App.css';\nimport SimpleForm from './Simple-form';\nimport React, { Component } from 'react';\nimport Header from './Header'\nimport Footer from './Footer'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <SimpleForm />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport ReactDOM from 'react-dom/client'\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n    <App />\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}